on: [push]

name: check and deploy

jobs:
  code_checks:
    name: Angular code checks
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get install xvfb -y

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Build prod
        run: npm run build:prod

      - name: Test
        continue-on-error: true
        run: xvfb-run --auto-servernum npm test -- --watch=false --code-coverage
        env:
          CI: true

      - name: Check code coverage
        run: npx -p check-code-coverage check-total --min=80

      - name: Set code coverage commit status ðŸ“«
        run: |
          npx -p check-code-coverage set-gh-status --from $GITHUB_WORKSPACE/coverage/coverage-summary.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update code coverage badge ðŸ¥‡
        run: npx -p check-code-coverage update-badge

  build_container:
    name: Build and publish container
    needs: code_checks
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: adrixop95/fishka-frontend:latest,adrixop95/fishka-frontend:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  scan_container:
    name: Scan latest container
    needs: build_container
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: azure/container-scan@v0
        with:
          image-name: registry.hub.docker.com/adrixop95/fishka-frontend:${{ github.sha }}
